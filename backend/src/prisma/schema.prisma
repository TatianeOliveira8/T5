generator client {
  provider = "prisma-client-js"
}

// backend/prisma/schema.prisma
datasource db {
  provider = "mysql" // Ou "sqlite"
  url      = env("DATABASE_URL") // URL do banco (configurada no .env)
}

model Cliente {
  id         Int    @id @default(autoincrement())
  nome       String
  nomeSocial String
  cpf        String  @unique
  dataEmissaoCpf DateTime
  rg         String
  telefones  Telefone[]
  pets       Pet[]   // sem onDelete aqui
  consumos   Consumo[]
}



model Telefone {
  id        Int     @id @default(autoincrement())
  ddd       String
  numero    String
  clienteId Int
  cliente   Cliente @relation(fields: [clienteId], references: [id])
}

model Pet {
  id         Int      @id @default(autoincrement())
  nome       String
  tipo       String
  raca       String
  genero     String
  clienteId  Int
  cliente    Cliente  @relation(fields: [clienteId], references: [id], onDelete: Cascade)
  consumos   Consumo[]
  ativo      Boolean  @default(true)
}



model ProdutoServico {
  id        Int                @id @default(autoincrement())
  nome      String
  preco     Float
  tipo      TipoProdutoServico
  ativo     Boolean            @default(true)
  createdAt DateTime           @default(now())
  consumos  Consumo[]
}

enum TipoProdutoServico {
  PRODUTO
  SERVICO
}


model Consumo {
  id               Int              @id @default(autoincrement())
  data             DateTime         @default(now())

  petId            Int
  pet              Pet              @relation(fields: [petId], references: [id])

  produtoServicoId Int
  produtoServico   ProdutoServico   @relation(fields: [produtoServicoId], references: [id])

  clienteId        Int
  cliente          Cliente          @relation(fields: [clienteId], references: [id])
}
